@model HomeViewModel

@{
    ViewData["Title"] = "Home Page";
}

<p>@Model.Message</p>
<div id="map"></div>

<form asp-controller="Home" asp-action="Index" method="post" id="mapInputForm">
    @Html.ValidationSummary()
    @Html.DisplayNameFor(x => x.NewMessage)
    @Html.ValidationMessageFor(x => x.NewMessage)
    @Html.TextBoxFor(x => x.NewMessage, new { @class = "form-control" })

    @Html.HiddenFor(x => x.Hidden, new { @id = "hiddenField" })
    <input type="button" value="Send" onclick="submitForm()"/>
</form>

<p>@Model.MapData</p>

@section Scripts {
    <script>
        
        //https://leafletjs.com/reference.html
        //https://www.geoman.io/docs/

        function submitForm() {
            var responseObject = {
                points :[],
                lines :[]
            };
            var markers = L.PM.Utils.findLayers(map);
            markers.forEach((x) => {
                if (x.options.pane === 'markerPane') { 
                    responseObject.points.push(x._latlng);
                }
                if (x.options.pane === 'overlayPane') { 
                    responseObject.lines.push(x._latlngs);
                }
            });

            var jsonValue = JSON.stringify(responseObject);

            document.getElementById("hiddenField").value = jsonValue;
            document.getElementById("mapInputForm").submit();
        }        
            
        
        var map = L.map('map').setView([58.164048, 8.004007], 13); //initial location (can this be fetched from device? )
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '&copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

        // Creates the drawing controls on the left hand side
        // The drawing control enables drawing of markers, polygons, and polylines
        var drawControl = new L.Control.Draw({
            draw: {
                polygon: true,
                polyline: true,
                marker: true,
                circle: false, // Disable circle drawing
                rectangle: true
            },
            edit: {
                featureGroup: drawnItems
            }
        });
        map.addControl(drawControl);


    </script>
}