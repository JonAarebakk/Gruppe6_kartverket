// <auto-generated />
using System;
using Gruppe6_Kartverket.Mvc.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Gruppe6_Kartverket.Mvc.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241113045608_Gruppe6_Kart_Tables")]
    partial class Gruppe6_Kart_Tables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Data.GeoChange", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("GeoJson")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("GeoChanges");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.CaseLocation", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("County")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("GeoJSON")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Municipality")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("LocationId");

                    b.ToTable("CaseLocations");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.CaseRecord", b =>
                {
                    b.Property<int>("CaseRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("CaseRecordId"));

                    b.Property<DateTime>("CaseDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("CaseDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("CaseLocationLocationId")
                        .HasColumnType("int");

                    b.Property<string>("CaseStatus")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CaseRecordId");

                    b.HasIndex("CaseLocationLocationId");

                    b.HasIndex("LocationId");

                    b.HasIndex("UserId");

                    b.ToTable("CaseRecords");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UserType")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserTypesUserType")
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId");

                    b.HasIndex("UserType");

                    b.HasIndex("UserTypesUserType");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.UserInfo", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("UserStatus")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.ToTable("UserInfos");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.UserTypes", b =>
                {
                    b.Property<string>("UserType")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("UserTypeDescription")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("UserType");

                    b.ToTable("UserTypes");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.CaseRecord", b =>
                {
                    b.HasOne("Gruppe6_Kartverket.Mvc.Models.CaseLocation", null)
                        .WithMany("CaseRecordss")
                        .HasForeignKey("CaseLocationLocationId");

                    b.HasOne("Gruppe6_Kartverket.Mvc.Models.CaseLocation", "CaseLocation")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gruppe6_Kartverket.Mvc.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CaseLocation");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.User", b =>
                {
                    b.HasOne("Gruppe6_Kartverket.Mvc.Models.UserTypes", "UserTypeNavigation")
                        .WithMany()
                        .HasForeignKey("UserType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Gruppe6_Kartverket.Mvc.Models.UserTypes", null)
                        .WithMany("Users")
                        .HasForeignKey("UserTypesUserType");

                    b.Navigation("UserTypeNavigation");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.UserInfo", b =>
                {
                    b.HasOne("Gruppe6_Kartverket.Mvc.Models.User", "User")
                        .WithOne("UserInfo")
                        .HasForeignKey("Gruppe6_Kartverket.Mvc.Models.UserInfo", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.CaseLocation", b =>
                {
                    b.Navigation("CaseRecordss");
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.User", b =>
                {
                    b.Navigation("UserInfo")
                        .IsRequired();
                });

            modelBuilder.Entity("Gruppe6_Kartverket.Mvc.Models.UserTypes", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
